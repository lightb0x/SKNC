{"version":3,"sources":["reducer/draft.js","reducer/article.js","reducer/comment.js","reducer/user.js","reducer/index.js","action/types.js","store.js","settings.js","component/BoardEntry.js","container/Home.js","action/article.js","container/Boards.js","container/Article.js","container/Signup.js","container/Signin.js","action/user.js","container/Admin.js","container/ResetPass.js","container/Draft.js","container/NotFound.js","component/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["initialState","article","Date","articleList","comments","searchResult","combineReducers","draft","state","action","type","comment","user","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","boards","searchType","v1port","backend","BoardEntry","props","articles","description","search","header","boardName","board","undefined","useState","searchT","setSearchT","searchBy","setSearchBy","Container","Row","Col","xs","sm","md","lg","xl","InputGroup","DropdownButton","variant","as","Prepend","title","map","item","name","Dropdown","Item","key","onSelect","FormControl","value","onChange","event","target","Append","Button","disabled","icon","faSearch","connect","storedArticle","dispatch","fetch","id","axios","put","then","res","console","log","Image","src","alt","style","maxWidth","maxHeight","display","marginLeft","marginRight","Boards","match","path","slice","Article","Signup","signin","username","password","post","catch","err","alert","history","useHistory","setUsername","setPassword","isEmpty","useKeyPressEvent","submit","className","Alert","textAlign","marginBottom","Card","width","Body","Title","Subtitle","Form","Control","placeholder","e","fontSize","href","onClick","push","float","Admin","ResetPass","Draft","docx","setDocx","isUploaded","setIsUploaded","setId","accept","files","bind","this","formData","FormData","append","data","message","NotFound","NavBar","overlayBundle","Popover","Content","Navbar","bg","Brand","Nav","Object","keys","Link","OverlayTrigger","trigger","rootClose","placement","overlay","faUser","App","exact","from","to","render","numArticles","component","Signin","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19c63180.chunk.js","sourcesContent":["import {\n  UPLOAD_DOCX,\n  FETCH_IMG,\n  FETCH_HTML,\n} from '../action/types';\n\nconst initialState = {\n\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPLOAD_DOCX:\n    case FETCH_IMG:\n    case FETCH_HTML:\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_ARTICLE_LIST,\n  POST_ARTICLE,\n  FETCH_ARTICLE,\n  EDIT_ARTICLE,\n  DELETE_ARTICLE,\n} from '../action/types';\n\n// TODO : separate draft from article\nconst initialState = {\n  article: {\n    // boardname\": article.Boardname,\n    // \"writer\":    writer.Username,\n    // \"title\":     article.Title,\n    // \"content\":   article.Content,\n    // \"count\":     article.Count + 1,\n    // \"createdAt\": article.CreatedAt,\n    // \"updatedAt\": article.UpdatedAt,\n    // \"isUpdated\": article.UpdatedAt.After(article.CreatedAt),\n    'boardname': '',\n    'writer': '',\n    'title': '',\n    'content': '',\n    'count': 0,\n    'createdAt': Date(),\n    'updatedAt': Date(),\n    \"isUpdated\": false\n  },\n  articleList: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ARTICLE_LIST:\n    case POST_ARTICLE:\n    case FETCH_ARTICLE:\n    case EDIT_ARTICLE:\n    case DELETE_ARTICLE:\n    default:\n      return state;\n  }\n}","import {\n  FETCH_COMMENTS,\n  POST_COMMENT,\n  EDIT_COMMENT,\n  DELETE_COMMENT,\n} from '../action/types';\n\nconst initialState = {\n  // \"comments\":  comments,\n  comments: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case POST_COMMENT:\n    case EDIT_COMMENT:\n    case DELETE_COMMENT:\n    default:\n      return state;\n  }\n}","import {\n  SIGN_UP,\n  SIGN_IN,\n  SIGN_OUT,\n  CHANGE_PASSWORD,\n  DELETE_USER,\n  RESET_PASSWORD,\n  SEARCH_USER,\n  CHANGE_ROLE,\n} from '../action/types';\n\nconst initialState = {\n  searchResult: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SIGN_UP:\n    case SIGN_IN:\n    case SIGN_OUT:\n    case CHANGE_PASSWORD:\n    case DELETE_USER:\n    case RESET_PASSWORD:\n    case SEARCH_USER:\n    case CHANGE_ROLE:\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport draftReducer from './draft';\nimport articleReducer from './article';\nimport commentReducer from './comment';\nimport userReducer from './user';\n\nexport default combineReducers({\n  draft: draftReducer,\n  article: articleReducer,\n  comment: commentReducer,\n  user: userReducer,\n});\n","// draft\nexport const UPLOAD_DOCX = 'UPLOAD_DOCX';\nexport const FETCH_IMG = 'FETCH_IMG';\nexport const FETCH_HTML = 'FETCH_HTML';\n\n// article\nexport const FETCH_ARTICLE_LIST = 'FETCH_ARTICLE_LIST';\nexport const POST_ARTICLE = 'POST_ARTICLE';\n\n// article/:article_id\nexport const FETCH_ARTICLE = 'FETCH_ARTICLE';\nexport const EDIT_ARTICLE = 'EDIT_ARTICLE';\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\n\n// local (article -> comment)\nexport const FETCH_COMMENTS = 'FETCH_COMMENTS';\n\n// comment/:article_id\nexport const POST_COMMENT = 'POST_COMMENT';\n\n// comment/:article_id/:comment_id\nexport const EDIT_COMMENT = 'EDIT_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n\n// user\nexport const SIGN_UP = 'SIGN_UP';\nexport const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\nexport const DELETE_USER = 'DELETE_USER';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\n\nexport const SEARCH_USER = 'SEARCH_USER';\nexport const CHANGE_ROLE = 'CHANGE_ROLE';\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n","// you can change board names OR add boards here\n// WARNING: board names should not be too long\n//          small-size screen devices (iphone5, galaxy s5, ...)\nexport const boards = {\n  'lite': ['논총Lite', '본글의 가벼운 요약'],\n  'main': ['본글', '지성의 세계'],\n  'oasis': ['오아시스', '현대인의 오아시스'],\n  'square': ['광장', '자유로운 토론광장'],\n};\n\nexport const title = 'ㅅㄱㄴㅊ';\n\n// first element is default value\nexport const searchType = ['제목', '저자'];\n\nexport const numArticlesOnHeader = 5;\nexport const numArticlesPerRequest = 5;\n\nexport const backend = 'http://localhost:8080';\nexport const v1port = backend + '/api/v1';\n","import React, { useState } from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport ArticleEntry from './ArticleEntry';\n\nimport PropTypes from 'prop-types';\n\nimport { boards, searchType } from '../settings';\n\nexport default function BoardEntry(props) {\n  const { articles, boardName } = props;\n  // const boardName = props.match.path.slice(1);\n  const board = boards[boardName];\n  let description, search, load, header;\n  if (board === undefined) {\n    description = null;\n    search = false;\n    load = false;\n    header = boardName\n  } else {\n    description = board[1];\n    search = true;\n    load = true;\n    header = boards[boardName][0]\n  }\n\n  const [searchT, setSearchT] = useState(searchType[0]);\n  const [searchBy, setSearchBy] = useState('');\n\n  const dropdownItemFactory = (name) => {\n    return (\n      <Dropdown.Item key={name} onSelect={() => setSearchT(name)}>\n        {name}\n      </Dropdown.Item>\n    )\n  };\n\n  return (\n    <div>\n      <h3>\n        {header}\n        {description ? <br /> : ''}<b>{description}</b>\n      </h3>\n      {\n        search\n          ? (\n            <Container><Row>\n              <Col></Col>\n              <Col xs={12} sm={10} md={10} lg={10} xl={10}>\n                <InputGroup>\n                  <b><DropdownButton\n                    variant=\"light\"\n                    as={InputGroup.Prepend}\n                    title={searchT}\n                  >\n                    {\n                      searchType.map(function (item) {\n                        return (dropdownItemFactory(item));\n                      })\n                    }\n                  </DropdownButton></b>\n                  <FormControl\n                    value={searchBy}\n                    onChange={(event) => {\n                      setSearchBy(event.target.value)\n                    }}\n                  />\n                  <InputGroup.Append>\n                    <Button disabled={!searchBy} variant=\"danger\">\n                      <FontAwesomeIcon icon={faSearch} />\n                    </Button>\n                  </InputGroup.Append>\n                </InputGroup>\n              </Col>\n              <Col></Col>\n            </Row></Container>\n          )\n          : <hr />\n      }\n      {/* TODO : https://www.npmjs.com/package/react-infinite-scroller */}\n      {/*        if load === true */}\n      {/* {\n        articles.map(function (item) {\n          return (\n            <ArticleEntry article={item} />\n          )\n        })\n      } */}\n    </div>\n  );\n}\n\nBoardEntry.propTypes = {\n  articles: PropTypes.array.isRequired,\n  boardName: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Image from 'react-bootstrap/Image';\n\nimport BoardEntry from '../component/BoardEntry';\n\nimport { fetchArticleList } from '../action/article';\n\n// TODO : get articles from DB, using props.numArticles\nfunction Home(props) {\n  console.log('before')\n  props.fetch(10);\n  console.log('after')\n  console.log(props.storedArticle)\n  return (\n    <div>\n      <Image\n        src=\"sknc.jpg\" alt=\"sknc\"\n        style={{\n          // image does not go out of view\n          maxWidth: \"100%\",\n          // image size cap\n          maxHeight: \"500px\",\n          // horizontal center\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      />\n      {/* what's new OR recommended OR trending OR random article for you \n          OR ... */}\n      <BoardEntry boardName={\"what's new\"} articles={[]} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  storedArticle: state.article.article,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetch: (id) => dispatch(\n    fetchArticleList(id),\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","import axios from 'axios';\n\nimport {\n  FETCH_ARTICLE_LIST,\n  POST_ARTICLE,\n  FETCH_ARTICLE,\n  EDIT_ARTICLE,\n  DELETE_ARTICLE,\n  FETCH_COMMENTS,\n} from './types'\n\nimport { v1port } from '../settings';\n\nexport const fetchArticleList = (id) => (dispatch) => {\n  axios.put(v1port + '/article').then((res) => {\n    console.log(res);\n    dispatch({\n      type: FETCH_ARTICLE_LIST,\n    });\n  })\n};\n\nexport const postArticle = () => (dispatch) => {\n\n};\n\nexport const fetchArticle = () => (dispatch) => {\n\n  // TODO : use FETCH_COMMENTS\n};\n\nexport const editArticle = () => (dispatch) => {\n\n};\n\nexport const deleteArticle = () => (dispatch) => {\n\n};\n","import React from 'react';\nimport BoardEntry from '../component/BoardEntry';\n\nexport default function Boards(props) {\n  const boardName = props.match.path.slice(1);\n  // TODO : get articles from DB\n  // TODO : get more articles on scroll end\n  return (\n    <div>\n      <br />\n      <BoardEntry boardName={boardName} articles={[]} />\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function Article() {\n  return (\n    <div>\n      <p>Article here</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Signup() {\n  return (\n    <div>\n      <p>signup page</p>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useKeyPressEvent } from 'react-use';\nimport { useHistory } from 'react-router-dom';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport { signin } from '../action/user';\n\nimport PropTypes from 'prop-types';\n\nimport '../center.css';\n\n// TODO : login feature (redux)\nfunction Signin(props) {\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const isEmpty = () => { return !username || !password; };\n\n  const keydown = () => { submit(); };\n  useKeyPressEvent('Enter', keydown);\n\n  const submit = () => {\n    if (isEmpty()) {\n      return;\n    }\n\n    props.signin(username, password)\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"signin\">\n      {/* TODO : if cookie is not used, delete following lines */}\n      <Alert variant='warning' style={{ textAlign: \"center\" }}>\n        <p style={{\n          marginBottom: 0,\n        }}>이 사이트에서는 로그인 관리를 위해 쿠키를 사용합니다.</p>\n        <p style={{\n          marginBottom: 0,\n        }}>로그인 시도시 쿠키 사용에 동의하는 것으로 간주합니다.</p>\n      </Alert>\n      <Card style={{\n        width: '22rem',\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n      }}>\n        <Card.Body>\n          <Card.Title>Welcome</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            please login\n          </Card.Subtitle>\n          <Form>\n            <br />\n            <Form.Control\n              type=\"username\"\n              placeholder=\"username\"\n              value={username}\n              onChange={e => setUsername(e.target.value)}\n            />\n            <br />\n            <Form.Control\n              id=\"pw\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n            />\n            <p style={{\n              fontSize: 'small',\n            }}><a href='/reset'><u>비밀번호를 잊어버렸나요?</u></a></p>\n            <br />\n            <br />\n            {/* type=\"submit\" ? */}\n            <Button\n              variant=\"outline-secondary\"\n              onClick={() => { history.push('/signup') }}\n            >\n              signup\n            </Button>\n            <Button\n              id=\"submit\"\n              variant=\"primary\"\n              disabled={isEmpty()}\n              onClick={() => { submit(); }}\n              style={{\n                float: \"right\"\n              }}\n            >\n              submit\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n    </div>\n  )\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signin: (username, password) => dispatch(\n    signin(username, password),\n  ),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Signin);\n\nSignin.propTypes = {\n  signin: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nimport {\n  SIGN_UP,\n  SIGN_IN,\n  SIGN_OUT,\n  CHANGE_PASSWORD,\n  DELETE_USER,\n  RESET_PASSWORD,\n  SEARCH_USER,\n  CHANGE_ROLE,\n} from './types';\n\nimport { v1port } from '../settings';\n\nexport const signup = () => (dispatch) => {\n\n}\n\nexport const signin = (username, password) => (dispatch) => {\n  axios.post(v1port + \"/signin\", { username, password }).then((res) => {\n    console.log(res)\n    console.log('signin succeeded')\n  }).catch((err) => {\n    alert('아이디 또는 비밀번호가 잘못되었습니다')\n  })\n};\n\nexport const signout = () => (dispatch) => {\n\n};\n\nexport const changePassword = () => (dispatch) => {\n\n};\n\nexport const deleteUser = () => (dispatch) => {\n\n}\n\nexport const resetPassword = () => (dispatch) => {\n\n}\n\nexport const searchUser = () => (dispatch) => {\n\n}\n\nexport const changeRole = () => (dispatch) => {\n\n}\n","import React from 'react';\n\nexport default function Admin() {\n  return (\n    <div className=\"admin\">\n      <p>admin page</p>\n    </div>\n  )\n};\n","import React from 'react';\n\nexport default function ResetPass() {\n  return (\n    <div>\n      <p>resetpass page</p>\n    </div>\n  )\n}\n\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport { v1port } from '../settings';\n\nexport default function Draft() {\n  const [docx, setDocx] = useState(null)\n  const [isUploaded, setIsUploaded] = useState(false)\n  const [id, setId] = useState(\"\")\n\n  // TODO : redux on draft HTML and images, using `id`\n\n  function setFile(e) {\n    setDocx(e.target.files[0])\n  }\n\n  function postFile() {\n    const formData = new FormData();\n    formData.append('file', docx);\n\n    axios.post(v1port + '/draft', formData).then(res => {\n      setIsUploaded(true)\n      setId(res.data.message)\n    }).catch(err => {\n      console.log(err)\n      alert('에러 발생: 다시 시도해보세요')\n    })\n  }\n\n  return (\n    <div>\n      {/* TODO : requires authentication! */}\n      {/*        if not, redirect to /admin */}\n      {/*        how to check if user is logged in or not? */}\n      {\n        !isUploaded\n          ? <div>\n            <input\n              type=\"file\"\n              name=\"docx\"\n              accept=\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n              onChange={setFile.bind(this)} />\n            <input type=\"button\" onClick={postFile} value=\"Upload\" />\n          </div>\n          : <br />\n      }\n    </div>\n  )\n}\n","import React from 'react';\n\nimport '../center.css';\n\nexport default function NotFound() {\n  return (\n    <div className=\"center\">\n      <h2>여긴 아무것도 없어요!</h2>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faKey } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport { title, boards } from '../settings';\n\n\nconst NavBar = (props) => {\n  // TODO : this is not working; maybe because this is component?\n  // TODO : useLocation() to get current url ?\n  const loggedIn = true;\n  const admin = true;\n\n  const signout = () => {\n    // TODO : do actual signout\n    console.log(\"sign out\")\n  }\n\n\n  const overlayBundle = (\n    // TODO : logout\n    // TODO : change password\n    // TODO : if admin, control panel (edit user role)\n    <Popover id={`popover-bundle`}>\n      <Popover.Content>\n        <Button\n          variant='light'\n          onClick={() => {\n            signout();\n          }}>sign out</Button>\n        <br />\n        <Button variant='light' href='/account'>account</Button>\n        {\n          admin\n            ? <><hr /><Button variant='outline-primary' href='/manage'>\n              manage\n              </Button></>\n            : <></>\n        }\n      </Popover.Content>\n    </Popover>\n  )\n\n  // TODO\n\n  return (\n    <Navbar bg=\"light\" variant=\"light\">\n      <Navbar.Brand href=\"/home\"><b>{title}</b></Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        {\n          Object.keys(boards).map((item) => (\n            <Nav.Link\n              key={item}\n              href={item}\n            >{boards[item][0]}</Nav.Link>\n          ))\n        }\n      </Nav>\n      {\n        loggedIn\n          ?\n          <OverlayTrigger\n            trigger=\"click\"\n            rootClose\n            placement=\"bottom\"\n            overlay={overlayBundle}\n          >\n            <Button variant=\"outline-secondary\">\n              <FontAwesomeIcon icon={faUser} />\n            </Button>\n          </OverlayTrigger>\n          :\n          <Button\n            variant=\"outline-secondary\"\n            href=\"/signin\"\n          >\n            <FontAwesomeIcon icon={faKey} />\n          </Button>\n      }\n    </Navbar>\n  )\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\n\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\n\nimport store from './store'\n\nimport Home from './container/Home';\nimport Boards from './container/Boards';\nimport Article from './container/Article';\nimport Signup from './container/Signup';\nimport Signin from './container/Signin';\nimport Admin from './container/Admin';\nimport ResetPass from './container/ResetPass';\nimport Draft from './container/Draft';\nimport NotFound from './container/NotFound';\n\nimport NavBar from './component/NavBar';\nimport { boards, numArticlesOnHeader } from './settings';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <NavBar />\n        <Container><Row>\n          <Col></Col>\n          <Col xs={12} sm={10} md={10} lg={8} xl={6}>\n            <BrowserRouter>\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/home\" />\n\n                <Route exact path=\"/home\" render={() =>\n                  <Home numArticles={numArticlesOnHeader} />\n                } />\n\n                {\n                  Object.keys(boards).map(function (item) {\n                    return (\n                      <Route\n                        key={item}\n                        path={\"/\" + item}\n                        exact\n                        component={Boards}\n                      />\n                    )\n                  })\n                }\n                <Route\n                  path=\"/:id(\\d+)\"\n                  exact\n                  component={Article}\n                />\n                <Route path=\"/signup\" exact component={Signup} />\n                <Route path=\"/signin\" exact component={Signin} />\n                <Route path=\"/admin\" exact component={Admin} />\n                <Route path=\"/reset\" exact component={ResetPass} />\n\n                {/* TODO : requires authentication ! */}\n                <Route path=\"/draft\" exact component={Draft} />\n                <Route component={NotFound} />\n              </Switch>\n            </BrowserRouter>\n          </Col>\n          <Col></Col>\n        </Row></Container>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import axios from 'axios';\n// import Cookie from 'js-cookie';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import { backend } from './settings';\n\n// axios.defaults.xsrfHeaderName = 'X-CSRFTOKEN';\n// axios.defaults.xsrfCookieName = 'csrftoken';\n// axios.defaults.withCredentials = true;\n// if (Cookie.get().csrftoken === undefined) {\n//   axios.get(backend + '/protected');\n// }\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}